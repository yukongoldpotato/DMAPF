{\rtf1\ansi\ansicpg1252\cocoartf2822
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\margl1440\margr1440\vieww9000\viewh8400\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\fs24 \cf0 \
\
ToDo\
\
- make it so that agents can go over each other and multiple agents can be in the same cell \
- make it so taht when lots of agents in a cell, its slower and if no agents its faster \
- sum of costs is total travel time of all agents \
- edge cost function: what is the current load/population on the cell? -> get new edge cost\
- certain edges have heavier costs than others (g cost) \
- do we need to predict the movement of other agents? probably\
- A* is not made to be dynamic - so make it so that the hscore takes into account the populated cells - we dont care if its that optimal\
- revert recalculation of A* if and only if its obstructed\
- populated h score is dynamic\
- implement .maps\
\
}